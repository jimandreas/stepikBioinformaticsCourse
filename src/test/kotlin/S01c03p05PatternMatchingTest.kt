import org.junit.jupiter.api.AfterEach
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test

import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.DisplayName

/**
 *  1.3 Some Hidden Messages are More Surprising than Others

Code Challenge: Solve the Pattern Matching Problem.

Input: Two strings, Pattern and Genome.
Output: A collection of space-separated integers specifying
all starting positions where Pattern appears as a substring of Genome.

See also:
stepik: https://stepik.org/lesson/240215/step/5?unit=212562
rosalind: http://rosalind.info/problems/ba1d/
 */

internal class S01c03p05PatternMatchingTest {

    @BeforeEach
    fun setUp() {
    }

    @AfterEach
    fun tearDown() {
    }

    @Test
    @DisplayName( "test with DNA strip supplied by class")
    fun testRepeatedTargetIndexesWithOverlap() {

        val genomeTest = "AAATGTACAATGTACGAATGTACTTAATGTACGCTGAAATGTACCAATGTACGTTAATGTACAATGTACAATGTACCGATTTCTATATAATGTACGAAATGTACAATCAAAATGTACAATGTACTGTCAATGTACAAATGTACTACTGCACGAAATGTACCAATGTACACTCGAATGTACAGGTAATGTACAATGTACGTTCAATGTACAGGAATGTACTACAATGTACAATGTACCCCGGTAAATGTACTCGACGATAATGTACAAATGTACATAATGTACAATGTACAGAATGTACCACAATGTACAATGTACAATGTACGAATGTACCTGACCCAATGTACAATGTACTGCAATGTACGAATGTACTAAATGTACTACCCCAAATGTACAGAGAGCGAAATGTACGCAATGTACAAGAATGTACTTGCGTTGCCTTGTCAATGTACTTGCAATGTACAATGTACTAATGTACTCCCAATGTACATAATGTACGGGGTTGTAATGTACCAATGTACTTGTACGAAATGTACCAATGTACTAATGTACAATGTACCAATGTACTTCAATGTACATTAAATGTACAATCAAATGTACTATTAATGTACCGAATGTACGACCTAATGTACCAATGTACGCCCTCCGTGAATGTACACAATGTACGGGAATGTACCAATGTACTAATGTACAGAATGTACCGAAATGTACTAATGTACAATGTACGACCAATGTACAATTAATGTACAATGTACCATTGTAATGTACAATGTACAGCAAATGTACAATGTACGGACGAATGTACTCGCAATGTACGTTAATGTACGAATGTACGTCAAATGTACAATGTACAATGTACCGACCGTTAATGTACCAAATGTACACGTAATGTACTAATGTACGAGTCTGGATCTAATGTACGGTGAATGTACAAATGTACAATGTACAATGTACTTAATGTACGGAAATGTACCAATGTACAGGAATGTACGCAATGTACGTCGCAAAATGTACAATGTACAATGTACCAATGTACTATAGTGCCAAATGTACCCAAATGTACTGAATGTACAAAATGTACAAATGTACACAATGTACTTAATGTACTTAATGTACAATGTACATAATGTACCTTATCACAAATGTACGACTGAATGTACAATGTACTCAATGTACTCGCCCTGGAAATGTACTATTACAATGTACATTCCGCTGTACGCGCAGTACGAATGTACAATGTACAATGTACAATGTACAATGTACTGTGGAATGTACCGTCCGAAATGTACCTTAATGTACGAAATGTACTGAAGAAAATGTACTTAATGTACATTACTAATGTACAATGTACGAATGTACGGGGTAATGTACACTAATGTACAATGTACACACAATGTACACGAATGTACCAATGTACAGAATGTACAATGTACTGACGGCAATGTACATAGAATGTACTAATGTACCCTCAATGTACCCACAATGTACCCAAACAATGTACATAATGTACTGGAATGTACCGAATGTACAATGTACAAATGTACGACGCTAATGTACCAATGTACAATGTACGTATAGACAAATGTACTGCAATGTACCCCCTAATGTACAAAATGTACATAGACGGATAATACCAATGTACAAATGTACAAAAGCTTACAATGTACTAAATGTACATGGAATGTACAGTGTTATTGAATGTACATGAATGTACATAATGTACCTAATGTACAATGTACAAATGTACATAAATGTACCAATGTACAGACCTACAATGTACCATCGAATGTACCGCGAATGTACCAATGTACAATGTACAATGTACAAATGTACAATGTACAATGTACAATGTACTGCAAGAACAATGTACCCAATGTACAATGTACTAATGTACCAATGTACAATGTACCAAATGTACTGGTGGCAAATGTACCAAAATGTACCTAAGGTAATGTACAATGTACGTACACAATGTACACTAATGTACTAACAATGTACCAATGTACCGGAATCAACAATGTACCTACACCAATGTACGAATGTACCCAATGTACAATGTACAATGTACCCTAGCCCTAATGTACGAAATGTACAATGTACAATGTACACGCGCGAATGTACGTAATGTACTTTGAATGTACAATGTACAATGTACAATGTACCAATGTACGATAATGTACAATGTACAATGTACACGAATGTACCGAATGTACAATGTACTTGAGAATGTACGAAATGTACAATGTACGTTGTCTCGTGAATGTACCAAAAATGTACCAATGTACCGAAGGAATGTACCCGCGCCTGAATGTACAATGTACCAGAATGTACATGCCTGAATGTACTAGCTGCAAATGTACTATAATGTACCAATGTACCACCGCTTAATGTACACTAGAATGTACGCTGTAATGTACGGAATGTACTGCAATGTACAATGTACTAATGTACAATGTACTGGGAATGTACAATGTACCTCGAATGTACCAATGTACCCAATGTACGTGAATGTACCCTTTAAAATGTACCAATGTACAATGTACAATGTACAATGTACTCTGTGTTGGCGAATGTACGGAATGTACCCCCCAATGTACGAATGTACGGCTAATGTACCCTTAGAATGTACAATGTACCAAATGTACATAATGTACAATTGCTTATGTAATGTACAATGTACCAAAATGTACCAATGTACAATTACCTCGCGAATGTACACGTGTATTGAACAATGTACAATGTACCCAATGTACTAATGTACAATGTACTAATGTACTAGAATGTACTGGTTAATGTACATAATGCCCAGCGAATGTACTTGAATGTACCAGAATGTACGTAATGTACTCAATGTACAATGTACTAATGTACAAATGTACAATGTACGATAATGTACCAAATGTACCTAATGTACTGTAAAATGTACGAATGTACAATGTACAATGTACCCAAATGTACAGCTGAGATCAAACTCAGGAATGTACCCCTGAATGTACAAATGTACAATGTACAATGTACAGAATGTACAAAATGTACAAGGTCTAATGTACGGGGAATGTACACAATGTACAATGTACAGAATGTACATCTGGAATGTACGAATGTACTGTAAAAGCGAATGTACAATGTACAATGTACATCAATGTACTAATGTACCAATGTACGCAACAAATGTACGGAATGTACGCAAATGTACACCCACAATGTACACAATGTACCAATGTACCTCTACCTAAATGTACATAATGTACTAATGTACCGAATGTACTATATAATGTACCCCATTGCGGTTTAGAATGTACCGTGAATGTACACCTAAATGTACAAATGTACCCAAATGTACCAAATGTACAAAATGTACGACCACTAAATGTACTTGGTGAGTCTAATGTACCGCAATGTACGGCTGCTCACAATAATGTACGCATAATGTACTAAATGTACCAATGTACTAATGTACAATGTACTGGCTGAATGTACCCCAAAATGTACAAATGTACGGAATGTACGCTAATGTACGTTAATGTACGCGAGTAGAATGTACTGGCCCCACAATGTACAATGTACAGCAATGTACAATGTACGGGGAATGTACAATGTACAATGTACGAAAACGAAATGTACTAATGTACGCAATGTACACTCCAAAACAATGTACCTAATGTACAATGTACGGCGGAATGGGGCCTACTAATGTACAATGTACAATGTACGTTGCACGAAAAATGTACGAATGTACGTAATGTACTAGGAATGTACCCTGAATGTACCGAGAATGTACAGAATGTACGGGCTAATGTACAATGTACAATGTACATGAAATGTACCGGGGACGCCCAAATCTCTTAATGTACAACAAATGTACTCAATGTACAATGTACAAATGTACGAAATGTACGGGTAATGTACTAATGTACTAAATGTACTAATGTACTGAATGTACCAATGTACCCTTTAATGTACCTAATGTACAGAATGTACTACAATGTACAATGTACAATGTACAATGTACCATAAAATGTACAGAATGTACTTGAATATCAATGTACCCGAATGTACTTTGCGTAATGTACAATGTACAAATGTACTCAATGTACAATGTACAATGTACACCTGATAAATGTACGACAATGTACGTAATGTACAATGTACGTAATGTACCTCCAATGTACAATGTACCAATGTACTGGAATGTACAATGTACACAAATGTACAATGTACAAATGTACGAAATGTACAATGTACGAATGTACAATGTACTGTCCGAGATTAATGTACGTGGCGAATGTACCATAATGTACAGAGAATGTACCAATGTACTAATGTACAATGTACGATGCAATGTACCATAATGTACTAATGTACTTATTCAATGTACTTTAATGTACGAGCACCAATGTACCGAATGTACCCAATGTACAATGTACGAATGTACAAATGTACAATGTACCCAATGTACAATGTACCAATGTACGTTGAATGTACGACAATGTACGGAATGTACGTAAATGTACATAATGTACCTTGCCCTTTCAATGTACTTTAATGTACAATGTACAATGTACGTCGGAATGTACGACGCAATAAATGTACGGCTAATGTACCTAATGTACAATGTACAATGTACCTAATATCAATGTACGAGCAGATAAATGTACTCAATGTACGGCAATGTACAATGTACATCACAAATGTACAATGTACAATGTACTGATAAATGTACAATGTACACAATGTACAATGTACTGAATGTACAATGTACCATAATAATGTACAGGAAATGTACCCGCAATAATGTACCAATGTACGTTGTTTGGGAATGTACCAATGCGAGCAGAAATGTACAAATGTACGTTTAATGTACAATGTACCGAATGTACGCTAATGTACCAATGTACCGGAATGTACACCCAATGTACAATGTACCGTAATGTACAGTTAATAATGTACGAATGTACAATGTACACAATGTACTTAAATGTACAATGTACAGTAAAACAATAATGTACAATGTACGGATCGGATGGAAATGTACTAATGTACGACAATGTACCAGGGTTCCAATGTACAAAATGTACTAATGTACAGTAGAAATGTACTTGTAATGTACCAAATGAAATGTACCAAATGTACAAATGTACGAATGTACTCTCAATGTACAGCTAATGTACGGTCAATGTACAATGTACAAATGTACATCAATGTACAATGTACTTGATCGAATGTACAATGTACACGAATGTACTACTTTCCCGAATGTACAATGTACATTAATGTACTAATGTACTAAAATGTACCAATGTACTCAATGTACGTATACCCTAATGTACTGCGTACGAATGTACTAATGTACCCAATGTACAATGTACGGAATGTACAAATGTACAGGGCTAAATGTACAACGAAATGTACCAATGTACTCTCGGTATAATGTACGAATGTACAATGTACCAATGTACTACCATGTCGAACAATGTACAATGTACAATGTACGCAATGTACAATGTACAATGTACAAATGTACATAATGTACTACGTTCAAGCCGAAATGTACAATGTACAATGTACAATGTACACCAATGTACAATGTACTAATGTACCCGCTAACCACGCAATGTACAATGTACGGAATGTACAATGTACTTGCTTAATGTACTGAATGTACGAATGTACGAATGTACCGAATGTACAATGTACTCTAGAATGTACCCAATGTACCCTAGAATGTACAATGTACAATGTACAATGTACCGCAGAATGTACGTAATGTACCAATGTACTAATAATGTACAATGTACTACAATGTACGACAAATGTACAGAATGTACCGATTCTGACGAATGTACCAATGTACAAATGTACCACTGAATGTACCCAATGTACAAAATGTACCGTAATGTACAGAATGTACAAATGTACTCTCCGTTCGACTAATGTACTCTGATACAATGTACACCAATGTACAATGTACTGCGCTAATGTACAATGTACTAAATGTACCTAATGTACCAATGTACTGTAATGTACGGGTTAATGTACAACAAATGTACAATGTACGTCGAGGCGAATGTACAACCCCTGGCCAATGTACAATGTACCTTAATGTACGCGGAATGTACGTAATGTACGTTAATGTACTAATGTACTAATAATGTACGAATGTACGGCGGAATGTACTGAATGTACTCACACCAAATGTACAATGTACGAATGTACCAATGTACCCCTTTTAATGTACAATGTACAATGTACATAAATGTACATTCTAGAATGTACAATGTACCATCAAGAATGTACAATGTACCCAATGTACAATGTACTAGAATGTACTTAATGTACGAATGTACTTGATAAATGTACCAATGTACAATGTACAATGTACAATGTACCAATGTACTTTAATGTACAATGTACCTTGTAATGTACTCTCAATGTACCGTAATGTACAATGTACTGCAAATGTACAATGTACAATGTACAATGTACTGTAATGTACGTCAAATGTACAATGTACACCAATGTACTCGTGAATGTACTAATGTACAATGTACCGGTAATGTACAATGTACAATGTACTCATTCAGAATGTACCCCCCGCCGAATGTACAATGTACAACGAAAAATGTACAGCTTTAATGTACCAAATGTACTCTCAATGTACGGCATTTTCGAATGTACTTAATGTACAATGTACGCAAATGTACCAATGTACCTGCTAATGTACAAGGAGAATGTACTATTTAATTAATGTACTGTTACCGTAATGTACTGGAATGTACCGAATGTACCAATGTACCTCTACGAAATGTACTGATGAATGTACAATGTACTGAATGTACCAGGAATGTACTAAATGTACAGTAATGTACGAATGTACAATGTACGAATGTACGATATGCTCCCTTAATGTACAATGTACATCCGTGGCAATGTACGAATGTACTATCGAATGTACACTCAATGTACATGACTGTTATAATGTACAAATGTACCGAATAATGTACGTGAATGTACAAAGACGCTGCCTTAAAATGTACTCGTGGGGAGCAAATGTACGGATAATGTACTGCCAATGTACGTAATGTACATCAATGTACGGTAATGTACAATGTACAATGTACAATGTACCAAATGTACAGAATGTACAATGTACATAATGTACACCAATGTACAATGTACCAATGTACAATGTACAATGTACCAATGTACGCAATGTACAATGTACGGAAAATGTACGAATGTACGAATGTACAATGTACACAATGTACTCAATGTACGTAATGTACAATGTACGCAATGTACAATGTACAGAATGTACAATGTACTTAATGTACAATGTACAAATGTACACTGATTTCTGTCTCAATGTACATCCAATGTACCAGAATGTACAATGTACAGTGAATGTACAGAATGTACCAATGTACTAATGTACGGTATTAAGGACCCGCAATGTACAATGTACAAATGTACAATGTACCAATGTACAATGTACAATGTACAGAGAATGTACGTGACGGCCAGCGAAATGTACGCTTAGCCTACTAATGTACAATGTACAATGTACAATGTACTAATGTACAATGTACAATGTACCTTGAATGTACTAATGTACAATGTACAATGTACGGCAATGTACAATGTACATAATGTACAACCTAATGTACAATGTACTAATGTACCAGAATGTACTGGGCCCAATGTACGAGAAGGCTAATGTACAGCGACAATGTACAATGTACAGTAATGTACAATGTACTGAATAATGTACCCAATGTACAATGTACCCCAAATGTACATAATGTACAATGTACCAGTAATGTACATCAAAATGTACAGTCTCAATGTACAATGTACACAATGTACACAGAATGTACAATGTACGCAATGTACAATGTACAATGTACCGGTCCAGAATGTACCGTAAGAATGTACAGGCTGCTGAATGTACCATAATGTACGAATGTACAATGTACAAATGTACTTAATGTACGGTAATGTACCATAATGTACAATGTACAAATGTACGTCAATGTACTGATGGCAATGTACAATGTACAATGTACGAATGTACGGAATGTACAATGTACAACCAATGTACAATGTACCAATGTACCGCAATGTACAATGTACAAAATGTACAAAGCAATGTACAAATGTACTAAATGTACAGGAATGTACAATGTACCAAATGTACGCGAATGTACTGCTAATGTACGACAATGTACAATGTACAATGTACAGCGAAAATGTACAATGTACTTACCTAAATGTACAATGTACAATGTACGAATGTACCTAATGTACGCTAGACAATGTACGCAATGTACGTCTACAATGTACCTTAATGTACCCCAATGTACTAATGTACGCTAAGGAATGTACCTCAATGTACTTAATGTACCAATGTACCTACTAATGTACGGTTTAACAATGTACCTCTAAATGTACGAATGTACCATCAATGTACTCTCGAATGTACGGCGCAAATGTACGAAAAATGTACGAATGTACTTCGAATGTACAATGTACCAAAATGTACATAATGTACTATAAGCAATGTACCCAAGCAGTGCGGCAAATGTACTTCAATGTACAAATTTGCAATGTACGAATGTACCCCAAATGTACCGAAATGTACAAATGTACGCCTTGGCAAGTCAATGTACAAATGTACAAATGTACAATGTACGCTCAATGTACCGAATGTACGGTAATGTACAATGTACTAATGTACAACGGTTAATTTGAATGTACCGAAATGTACGATTTAATGTACAATGTACTGAATGTACGGATCTAATGTACAATGTACACTAATGTACAATGTACAATGTACCATTAGGCAATGTACACAATGTACACAATGTACTCACCAATGTACAATGTACGCGCCAATGTACGCTCCGATATTCTCTTGTAGTACAATGTACAATGTACCAATGTACAATGTACTGCTAATGTACAATGTACAATGTACCACAATGTACAGTTAAGAATGTACTAATGTACCGAAGTCTCAATAATGTACCAATGTACGAAATGTACCCTCTAATGTACTGTACAAAAAATGTACGCAATGTACCTCAATAATGTACTCGTCAATGTACTTAGAATGTACGAATGTACAATGTACAAATGTACTTTTCAATGTACTAATGTACTAATGTACAATGTACGAAGATGAATGTACAAAATGTACTTCCTCCGCAATGTACTAATGTACCAATGTACAATGTACTGACCTGCAATGTACCTAATGTACGAATGTACAATGTACCAATGTACAAATGTACAAATGTACCAATGTACGTCGTGAGCGAATGTACAATGTACGGGTAATGTACGAATGTACGGTATAATGTACAATGTACGAATGTACAAATGTACGCTCAATGTACATTAATGTACTAATGTACCGATGGAAATGTACGTAATGTACACGCAAAGAATGTACAAATGTACTGACGGAGTGACAATGTACGAATGTACTTCATCGATTATTCACAAATGTACACATTCCCCAATGTACTCCACAATGTACAATGTACAATGTACAATGTACAATGTACGAATGTACAATGTACAGAATGTACGAATGTACAATGTACAATGTAC\n"
        val targetTest = "AATGTACAA"
        val foundIndexString = printRepeatedTargetIndexesWithOverlap(genomeTest, targetTest)

        val resultFromTest = "1 55 62 97 110 128 184 222 258 275 301 308 337 410 453 542 578 709 727 738 758 776 835 842 922 930 937 1004 1011 1062 1071 1106 1150 1225 1232 1239 1246 1334 1371 1416 1519 1526 1555 1600 1632 1640 1722 1729 1801 1808 1815 1823 1830 1837 1869 1892 1947 2044 2051 2083 2090 2131 2138 2145 2170 2177 2203 2231 2304 2426 2441 2459 2526 2533 2540 2619 2644 2663 2688 2727 2751 2846 2861 2869 2924 2931 2986 2994 3001 3017 3026 3060 3114 3121 3315 3342 3450 3482 3550 3567 3585 3592 3657 3689 3696 3792 3799 3844 3864 3871 3981 3988 3995 4063 4070 4087 4094 4135 4162 4187 4204 4211 4228 4243 4318 4410 4425 4433 4449 4541 4548 4603 4610 4667 4687 4694 4713 4729 4745 4835 4854 4909 4948 4974 4999 5059 5123 5172 5179 5197 5218 5252 5352 5368 5390 5434 5469 5476 5492 5499 5506 5544 5551 5558 5575 5610 5626 5680 5720 5727 5734 5781 5844 5873 5901 5954 5974 6029 6040 6063 6081 6191 6228 6235 6266 6287 6303 6358 6365 6372 6397 6437 6455 6462 6469 6497 6534 6552 6559 6597 6604 6677 6714 6813 6867 6902 6974 7004 7097 7104 7111 7136 7162 7177 7184 7208 7242 7276 7292 7308 7324 7331 7382 7448 7455 7463 7478 7485 7543 7550 7557 7572 7579 7605 7612 7629 7645 7657 7725 7742 7770 7797 7840 7867 7883 7890 7959 7966 8003 8010 8042 8049 8073 8080 8091 8116 8123 8132 8144 8171 8218 8225 8245 8266 8273 8515 8587 8631 8659 8667 8675 8712 8727 8769 8798 8815 8822 8874 8923 8938 8956 8963 9119 9126 9162 9183 9224 9263 9278 9286 9319 9357 9372 9447 9534 9541 9548 9555 9570 9594 9601"
        assertEquals(resultFromTest, foundIndexString)

    }

    @Test
    @DisplayName( "test with made up string for overlapping substrings")
    fun testRepeatedTargetIndexesWithOverlapMadeUpStrings() {

        val genome2 = "blahbbbblahblahblahb"
        val target2 = "bb"
        val foundIndexes = printRepeatedTargetIndexesWithOverlap(genome2, target2)

        assertEquals("4 5 6", foundIndexes)

    }

    @Test
    @DisplayName( "test with how now brown cow")
    fun testRepeatedTargetIndexesWithOverlapMadeUpStrings02() {

        val genome2 = "how now brown cow"
        val target2 = "ow"
        val foundIndexes = printRepeatedTargetIndexesWithOverlap(genome2, target2)

        assertEquals("1 5 10 15", foundIndexes)

    }
}