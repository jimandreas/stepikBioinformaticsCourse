@file:Suppress("SameParameterValue", "UnnecessaryVariable", "UNUSED_VARIABLE", "ReplaceManualRangeWithIndicesCalls")

import util.LongestCommonSubsequenceLCS


/**
Code Challenge: Solve the Longest Common Subsequence Problem.

Input: Two strings s and t.
Output: A longest common subsequence of s and t.
(Note: more than one solution may exist, in which case you may output any one.)

 *
 * See also:
 * stepik: @link: https://stepik.org/lesson/240303/step/5?unit=212649
 * rosalind: @link: http://rosalind.info/problems/ba5c/
 * book (5.8):  https://www.bioinformaticsalgorithms.org/bioinformatics-chapter-5
 */


fun main() {
    val lcs = LongestCommonSubsequenceLCS()

    val sCol = "TGCCCGCTACGTATGGCAATCATCAGTCTAGGACGGCAGTCCGGAGAACGAGACGGTCGTTAACTTCACGATAAACATTTCTAGTCGATGTACCCATGCGAGAGACCTGCAACTTCACCGGCAATACCAGCACTATAGATAGCCCGTTCAAGGTTACGCTAGATATCGACAGCATCTGTCGGAAAGCTATGGTCACGGGGCATCGACTCCGACTTAACATAACGTTGGCCAAAGGCGGTCTACTGCAACAAGTTGCCTTATCATTTGGGACGCCTCTACTCGGTTCACTTGGGGTAAATTCCGTAATAATGGACTCGATGCTCCAAGGACGTTCCTTACTATAGTTACAGACGATAACTAAAATACCCTGAAAACCCGTTAGGCGGGGGGTTTGAGTTCTCTGGCCTGATTTTTAACACTTCCACAGGGTGAAATAAAGGCGGACACTCTCTACAAGGTAACGTCATACCGCGCATGCATTCTGCTGATTTTAGATGTGACCATACTTGGCGTCTAGTCCCATTGACTATCCTTGCCGAAGAGCTCCGTACTTGCTCTTGAATGATTTGGGGCGCAGAATAGTGCATACACGTACCTTTAGTCTAATTTCCATAAAACTGGTCATGACTGTACGCACCTGACGTAGGTCGCGTTCATAATGAGTCCCAGCCAGAGGGATCACCGAACAGCGAAAGCGCTTTATGTCGGAGATAGCTGCCCTCGTTCTTGCAGATGGGTCACTGGTGAACTCGAGTGGGGCTGACAAGCGCGAGTTTTACGCATCGGAAACTTCGTCGTCCTCAAACTAATAGTATTAATGTAAAAGGTCTTATGCCAACTACATGTTATCGTGATCCCATCATACG"
    val sRow = "GATAGGCATTTTAAGACGTTTGCTCAATCATTTCAAGCGCCGTAAAGCGCGCTGGACGCGAGAGACAATATAACTGAAATCTCGATGGCAACCAAATCTCATCCGGAAGTATTATAATGCAACGGGGCTATTTCACGGCTGATTCAGCTCGAATGCGCCTAAGACTATATTTACCTAGAACTGCAATACGATGGGTCAATGGATTTATGAAACTCCCTGGCGATCGGCATACTTAGGCGATCAACACGGAGTTGACGAGATGCCAGCGGGCTAGTCATACGCCGGCCGCCAAGAGCAAGGTTACACTATGTTAGAAATGAGCCTTCGCTGCCAGATCTATTCGACGATTGGTGGGGCGAACCAGGCGGGCGTTAGTCTCACACCTTAATATATCTCGGCCCTGTGACCGCAACCCTAAGGGACCCATCGCCAGCGGTTCCGGTAATGGGACCACCATAAATAACTCGTATACGCTTGTCGATTACTGATACTAGGTATTTGTGATTGCGATACATGGATCCGGAGCATACTGCATCCCCGCTCTCTCGATAAGCTAGGTTTTGAGCTACACCACAGAGCACTCACTCGTCCAGGTGCTGAGTATGAAAGCCGGCTCATCGCTCGTATTTATATGCGTACGTGATAGGGACCGGTGAGTGGTCCGATGCCGATTAGCCGTAACGATCACGCGTTCATCCCCGTTACGCCTCATGACCGTCTTAGTGTAGTGCCGATAAAGGTCTCTTGTTGGTAGGCTAATAACCAAGGGTGCTTCGTCATGCCCTGCCCGTAAATGGCGATTAGGACCTCGTGATTTTGTGAAGGGCATCCAGCTATTGACGTTTAGCGACAGAGAATTTCCTGAGATATTCCTCATCATCTAGGTCCCGTTCTTTCCTTGCCAGGAC"

    val result = lcs.backtrack(sCol, sRow)

    val str = StringBuilder()
    val lcsString = lcs.outputLCS(result, sCol, sCol.length, sRow.length, str)

    println(lcsString)
    // worked!
}


