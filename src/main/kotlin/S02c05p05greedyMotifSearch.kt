@file:Suppress("SameParameterValue", "UnnecessaryVariable", "UNUSED_VARIABLE")

import util.greedyMotifSearch

/**
Code Challenge: Implement GreedyMotifSearch.

Input: Integers k and t, followed by a space-separated collection of strings Dna.
Output: A collection of strings BestMotifs resulting from applying
GreedyMotifSearch(Dna, k, t). If at any step you find more than one
Profile-most probable k-mer in a given string, use the one occurring first.

 * See also:
 * stepik: @link: https://stepik.org/lesson/240241/step/5?unit=212587
 * rosalind: @link: http://rosalind.info/problems/ba2d/
 */

fun main() {

    val sample = """
TTACAGCCGGTTCGATCAATCGTTGCTAGTAAATCTCATGGTGCATACACATTGCTTTTAGGTTTAATGGTGTCGCAGGTTGGGTAAATGAGTCGGCTTGTGCCTACCCTACTTTGGCCTCGGTTACGTTAGGTTTTGATCAGCTAACGCTAGCTC
CAGAGTATCTTAACGACTGTATTCGTATTTTACAAAGGTGCATCACCTTGAAGAAACTTAACCGGGTGCGACGGAAATCCGTCTAAAGTTCAATACATTATTGATGCGCTATTCAGACTTATCCGGGGCTATCTACTTTGGACAGCACCTCCGCGA
GATTGTGGGTTTTACCACAAGCCGTGCGACGGTGCGCTCGTCTCTGGTACGCGAATTCCATGTATAATGTCAAAACCGCCGGCGCTAGGTTGGGCCAGCTGATAATCCGACGTAGGGTCTAGGACCTAAACGTAACCATCCTGAATTGTGCGCTGT
CTGCACGACGTCGGATCCTCTTCTGTACGCTGCAGCACGTAGACTAGTCTAGATTGGCCGGTGACATGCCTTAGGCTCTTGATTAGGGATTATTACATAAGGTGTTATAGACGAGTTGATGATGCTTCCCGCCGTCCGATTCACCGTCCACATTTC
GGGCTGCGAGCCAACGATAAACCCACTGTAACTAAAATCCGCCCCTCGCCGGTCGGTGTCCCCAATTTTACTTGTTCATCATCGTCAATTGAGGCGCGGGTAGATCATCTAACTTGGACCGTGGATCACCTAGTATCCACTCGTTTCGTAAATTCT
GCTTTATAACCCTCACGTCACTCCTATCGTGCTACAGTGAATTGCACAATCGTGCCAGCCGTTACATTAAAGCTAATTTGGGCGTTCGGGAATCCGCATTGACCCCCAGCTCGCAAGCGCGGCGCCCCTAAGCATATCTGTCACTAGCTTGAGGTA
CTAACTTGGACGTGTAGGCTACACGCCAGGGCGTACGTCTTCATCACCTGTTAGAAGATATCGGATATGAGAGCCGCAATAATACCATGTTATCCCCAGTAGGTACACCAACGGATACCACTTATCCCCGAGTAAATGCGTGTATCAGGGCTTACC
CGTACGTTCTCGCCGCCTGTACGACTATCTTGGGCGTTGTAAAGCGATCCAGCGACGTTATTACATGATAGCTGGCTGCCTGGCAAATGAACGTTTGTAAGATACATGTGGCGGAAAAAATGATGGCTAAAGAAACGTTGTGGGGCCCAAGTTCTA
GTTCGTAGCCGAGGACATTATGATATCCGTCACAAGAGGACAATAATACTATGTTGGTCTCCGGGTGGTGCGAGTGCGCCAATCTATCCCACCGGATGGAGATGAGGAGTGCACTACAACTGAGTACGTAAACCACTGAGACGGAGTGCAACCCCT
ATAATTTACAGAGCGAATACATAATCCTGCAGTCATTCCCCCCCCTCGTTGCCTTAACAGCGTGCGGAGCAGTAAAAGGTGGCCAGCTCAGATGTGCTATCTTGGCCTTCCCAGATGGGCTAGGGGCTTCAATGCGCGACTCTACTCCAACACATA
ACATCGATGTCTGGTACTCCACGAACCTCTGAGTACGTCTTTGAAGCTGTATGTTCTAGACTCCTCATGGTACACCACGGTGTATTTAGGGCTTAACTAGTTTGGACGTCGACCCTAACATCGTTTAGAACGAGCGGAGTCGTAAGAACCGCTGAT
GCCAAAGGACCCGTCTCAGCGTGTTAGTATTCGCGGTCGGTATTACGCCGCGCTCTTGTTAGTCTATTTGATACGTTACTTAACTCTACAGACTACCTAAGTTGGACGCTTATCTCGGTCGCCGCTGTTCCCCCTACCGAGACCTGAGATGTTAAC
TCACCCTAAAAGGTTGAGGCAAAACATGTCGGACTAAGGGGATCCGTCCGCCAATCCCAGTCACCTTTTTATGTCGAGCACCATCTACGTTGGTCGATTGTGTGGAAGATACTGAAGGAGTTCCGATGACTACCTTGGTCGCGTTTACGGGAGAGA
TCGTCCAACCGCGGCAGTAAGACACTAGCTTGGTCCCGGGTTCTTGGATAGAAAGTGCCCTCGTGACGAGGACAGTTAGGATACAAATGTTGAAGACACATCAACATTCTCGATGCGGGGGGGTGGTAATGCAATAATCTTTTGCTGTAAGCCGCT
TCTAGAACGGGAAACGGATCACCTCAGAATTATAGAAAGGTCACGGGAGTTTGATTAGTTATGCCGAAACGACCCGCTAGGCTCCTCAATGAGATACACACAGGTGTTCTAAATTGGTCCGTGGATCAGTCCTTAGGTACCTCAGATTTATTCCAG
TTTCGGGAGCTATCCTTGCACGACACCACACTAACGCCCATTCAGTTTCTAAGTTGGACCTGTGAGTCAGACTCACATGCGTGATCTCACTGACAGGGCTCTAAAACAACACCGACAAGCTGATGACCACATTACCGATAAACAAAACAAAATGGC
TCTTATCAAAGGATCACCACGCCTAGGTTGGCCTGACTCCGAGGCCACCCGCATAAACAACGGCCTACTCCGCGGTCAGGAACCCTAAGTTGGCCACTGGCGCAGCTTATGGACCACGAGTTCGGTTATTCTTAACGCCTTAGAGCCATGCGCCCT
GCAGGTCCCGGATCCAATTGTAAAGTGAAAAAGGGTTCCAATGCCTTAGATAAACAGAGTCGCCATTCTATCGTCGTATGCATCCATGTGGGAACTTGTAGTTCCCCAAAGTATAGCATACTAGCTTGGCCTTGGTCCTGCCCAGATAGCCACCGT
TTAGTACTGTTGAGCTTGTGTCTATCCGCCACACCTGGGAACGGGTCCTCAAGGGGAGCCCTACATTGGTCAAAATTTCAGTAGCTTAACTGCTGGACGATGCTTGTCTAGGAAAAAGCCTCAAGCACTCCATACCAAGTTCAATTCGTAGTCGTG
ATCCAGGACCACTACTATGTTTTGGGTCATCGCCTTTATGGTATAGCAGACGCTTAAGGCCTATCTTGGGCGACATCGACCAGCTGCAAAAATTGTATCGGGCACGCCCTATACTGGCGGATTGTCCGTCGTACGGCCGAAGATATGCTGACGTCA
GCTCTCTGTAGTCTATCTTGGCCTCCAGCAATCGGCTACGCAATGTAACATCGCACGGTTTCCACCGTTTTGCGTTGAATGAATAAACGGTTCGGCACAGAGCTCTCACGACGGCACGGCGGTTAGATGGCCTGCAATCGATAGACATCGTTAAGG
TCATGGTATGAGAGCGCTTCAATACCATCTCAAAGTTTGTAGGGATACTAGAGTCGGGGCCTACAGACTGCACTAACTTGGGCGCTTCTGTGCGATCGTCTGCTACTACCTCGCGTGAGGGTATGTTCAACGGCTTGGACCGAATGTCCAGGTCCC
AAGTTCACAAGTCATGTAACAGACCATAAATTGACGCAGGATCCGATGGCCAAGGCCTCTCCGCAAGTCGTGAATACCTAGTTCGTCTTCATCTGACCGGTCAACGTTGGAACGCCCTCTGATTTTTATGGCCCTCGGGAGTCCCTATATTGGACC
ATCCTAATATGTATTGAAGTCTGCAAATTCGTCTAGTTGTGACTATTGAGGGACCCCCGGGTGCCGGCGAGTGAGGCCTGCACCCTATTTTGGGCTCGGGTAAACGGGTAACTTCCACGGCTGTCCGTGGCCAAGAGACAGGCTTGTTTCACTAAT
CTGCTCTCCGTATTCTTGCCACAAAACCTGTTATGCAACCTCGCCATCCCTCTGAACTAATACGCTTAGTATCGCAGGGCCCTTACGTAGAACGGTCCTTGACTCAGCAAACTTAATCGTCTATATTGGCCTCGGATAGGTAGCAGTCGGTTAGCA
    """.trimIndent()


    val reader = sample.reader()
    val lines = reader.readLines()
    val kmerLength = 12

    val result = greedyMotifSearch(lines, kmerLength)  // note: do NOT sort result
    println(result.joinToString(" "))

}




