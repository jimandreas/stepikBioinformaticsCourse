@file:Suppress("SameParameterValue", "UnnecessaryVariable", "UNUSED_VARIABLE", "ReplaceManualRangeWithIndicesCalls")

package problems

import algorithms.AlignmentOverlap

/**

Code Challenge: Solve the Overlap Alignment Problem.

Input: Two strings v and w, each of length at most 1000.

Output: The score of an optimal overlap alignment of v and w,
followed by an alignment of a suffix v' of v and a prefix w' of w
achieving this maximum score. Use an alignment score in which
matches count +1 and both the mismatch and indel penalties are 2.

 * See also:
 * stepik: @link: https://stepik.org/lesson/240306/step/7?unit=212652
 * rosalind: @link: http://rosalind.info/problems/ba5i/
 * book (5.11):  http://rosalind.info/problems/ba5f/
 */

fun main() {

    val sample = """
GTCTATAAAATACAACGCCTCAGCTGTTAGGCCATTGATACCTGGCTCTCGCTTCAAATATTACGTGGCCCTTTGGCACGGTACCCTTCAGCTCAATTAGAGTAGGGCGTGATGTCGTCAATGACAACGAAAGGCCGCCATAAGGACTTCGCGCTGGTATCAGTCGCGTACTGTCGTAAAGAGGTTTCGGACCGCCCCGATTGCTACACCAATTACCAGTGTTCAACGCGGGACAGGTTGGCTAGGGTAACTCGAAAATAGCGACAGCGCATCCCTCGTCAAGCTTGACACCTGGTCGTCGACTTCGGTGCCACTGGACTCTCGGGTCTGCGTCGCATTTCGTGCGGACCAACGATTGCCACGCACTCTAGAAGTTGCTGGTGGCTTGACCGTCAACTAGACTCCGGGATACTTCAGCCACTCTCCCACTAGGAGACGGTCGCGCTCTACGCAGGGGGTGATCCATTCCTCCGCGACTATTTTTCTTACCACGACCGGCGGAGCAGATTACCGCCTTCCCAAACAGTACTGCATGACCAGAAGTCATATAGAATGGAAGGAACGTCAAGATTTCGAAGAAGCAAATTTAAAGTCGCAGTGTGTAATTAGTGTGCCGATCTGAAAACCTAAACCACTACACGTATCATAATTCTTTAACGGCCGACTCCTAGGGAAGTAGCTCATACGAGACCGCTGCAATCATCCTAATTACTTCTCGTCTTCGGGCTCAGCGCTAGAGCCCGGCCACCATAAGTGAGCCTACACGCTACGCCTGTAGGCTCCATCGGGGTCTTATAGGGGTTTTACTATAACGCAGAGTACGATTATATGCAAAGGTCTGGCGTCTCGCGGGGCGTAGGTGGAGTACGGTTGCCATTGGCTACTAAAGTGAAAACTCATCCGGCCATAATGAGTCAACGTTGACGTGTCGGCCCTCGGGCCGCATCTGCACA
TTTAACCCCCATACGAGATACTAAGAGCATCGCTACTTAATTCTATTTCGGGCTCAGCGCTAGCACCTCGCCATATGATGGAGCATACACGCTATGCCTAAGGGTCGTCGCAGGTCCATTATAGGGATTTTACATGAAGCGCGGAATATGATTTAACCCCAGGTTCGGCGTCTCGTCAGGGTGAGGGACATACAGTCGCCATCCCAATAAAGTGAAAATATCATGCGGCCATAATGAGTCACGTGACGTACGGTCTCAGGCCGCAGCTCAGCAAAATATTATTGAATTCGGTTGACCTGCCAACGTAGGCTTCACTGTAGTCTACTCGCGCGTAGCCCTCAGTACTCGGCCGGCTCCCGCCCTGAATGTGGCTCGTGTATTGACCTCTTGTTTAAGAGGTATCTCTTCTTTATCGCACACGCTTGCGACGGCGTACGGAACTTCGGGAGCCTTAGTGTAACGCTCTTGTATTTACCGTGTTCCATAGCCCGTGCATATGCGCCGGTAATCTGTGAACTGCATTGGTCGACCTGTTCTGCACCGTCCCCTTCGCCCGAATAGTCCTTTTAGTCGAGACCCGCCGATTTCATCGCATCAGGCGTCCGTCCCGACTCTCTGACTGCGAGCAGACCTCAGGTCCCTTTACTTAGGAACGAAATGCGGATACCAAAAACCGTGATGTTGCATGTGCTGACCGCTTCCGCGTACCCCGGGAATCACTAAGCATACGTCACTAGTTGTGGATCCAGGTTATCGCACGGAATTACTATCGTCACCCAGTATTCTCAGGCTACAGTCCATAGCATATAACGCTTTCACAGCTGGCGAAAGTACCTTTGTACGAAGTTCTATACGCCTACGGATTGTTTGAGCGGCGTTCGGAAGTTAAACTCGAATGAAT
          """.trimIndent()

    val reader = sample.reader()
    val lines = reader.readLines()

    val sRow = lines[0]
    val tCol = lines[1]

    val match = 1
    val mismatch = 2
    val gap = 2

    val oa = AlignmentOverlap(match, mismatch, gap)

    val result = oa.overlapAlignment(sRow, tCol)
    println(result.first)
    println(result.second)
    println(result.third)

    // correct!

}


