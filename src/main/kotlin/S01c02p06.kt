
// 1.2 Hidden Messages in the Replication Origin

// Code Challenge: Implement PatternCount

// Count(CGATATATCCATAG, ATA) == 3

fun main() {

//    val genome = "CGATATATCCATAG"
//    val target = "ATA"

    val genome2 = "blahbbbblahblahblahb"
    val target2 = "bb"
    val genome = "GGTAGATCTAATAGATCTATAGATCTATAAGAGATCTACTTGACGGAAGATCTAAGATCTAAAAGTCGAGATCTAAGATCTACTTTTGATCCTAGAGATCTACATAGATCTAGAGATCTATAGATCTACAGATCTACAGATCTAGAGATCTACCCAAAAGATCTAAAAGATCTACGGACAGATCTACGGGCAGATCTAAGATCTATGAGATCTACAGATCTACAGATCTAGATTCGAGCCGTTAGATCTATACTAGATCTAAAGATCTACTGCGCAGATCTAAGATCTAAGATCTAAACAGATCTACCAGCAGATCTAGGGAGATCTAAGCGAGATCTACTTAGATCTAGTGCTAGATCTACAGATCTAAGATCTAATGCACAGATCTATGTAGATCTAAGATCTAACCTAGATCTATAGATCTATAAGATCTAAGATCTAAGGCCTGAGATCTAAAAGATCTAAGATCTATAGATCTAAGATCTAAGATCTAATCCAGATCTAAGATCTAGACCGAGATCTAATGAGATCTATGAGATCTATGCAGATCTACCACGCTAGATCTAAGATCTAGGAGATCTAATAGATCTAGAGATCTAAGATCTAGCAGATCTAACTACATCAGATCTAAGATCTAGAGGAAACGCAAATTGGGATGAGATCTAAGAAGATCTAAGATCTAACCGGAGATCTAGGAGATCTACGCGGCCCGGAGATCTAGCCAGATCTAATCACCACCAAGATCTAAGTATATGTTTTCTAAAGATCTAAGATCTAAGATCTAACAAGATCTAAGATCTAAAGATCTAAGATCTAAATGGAGATCTAAAGATCTAAGATCTAGGAAGATCTACGAGATCTAAGGAGATCTAAAGATCTATATAGATCTACAAGATCTAGCCGAAGAGGTCAGATCTAAGATCTAGCAGATCTAGAGATCTA"
    val target = "AGATCTAAG"
    println(countRepeatedTargetsWithOverlap(genome, target))
}

fun countRepeatedTargetsWithOverlap(genome: String, target: String): Int {
    var foundCount = 0
    for (i in 0..genome.length-target.length) {
        if (i > target.length + genome.length) {
            break
        }
        if (target == genome.substring(i, i + target.length)) {
            foundCount++
        }
    }
    return foundCount
}