{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bioinformatics course notes \u00b6 Here are notes about various problems given in the following online courses. One course is supported by the stepik.org and the rosalind.info websites. Part of the curriculum is described in the online portion of the book Bioinformatics Algorithms by Phillip Compeau and Pavel Pevzner. https://stepik.org/course/55789/syllabus http://rosalind.info/problems/list-view/?location=bioinformatics-textbook-track Website Version 1.0 October 2021 \u00b6","title":"Home"},{"location":"#bioinformatics-course-notes","text":"Here are notes about various problems given in the following online courses. One course is supported by the stepik.org and the rosalind.info websites. Part of the curriculum is described in the online portion of the book Bioinformatics Algorithms by Phillip Compeau and Pavel Pevzner. https://stepik.org/course/55789/syllabus http://rosalind.info/problems/list-view/?location=bioinformatics-textbook-track","title":"Bioinformatics course notes"},{"location":"#website-version-10-october-2021","text":"","title":"Website Version 1.0  October 2021"},{"location":"Notes/","text":"Notes on various problems \u00b6 Some topics in the cirriculum presented challenges in understanding and in algorithm development. My notes on these topics are below. Minimal Mutation Trees of Sequences \u00b6 SIAM J. Appl. Math., 28(1), 35\u201342. (8 pages) Publisher: Society for Industrial and Applied Mathematics Author: David Sankoff https://doi.org/10.1137/0128004 Abstract: Given a finite tree, some of whose vertices are identified with given finite sequences, we show how to construct sequences for all the remaining vertices simultaneously, so as to minimize the total edge-length of the tree. Edge-length is calculated by a metric whose biological significance is the mutational distance between two sequences.","title":"Notes"},{"location":"Notes/#notes-on-various-problems","text":"Some topics in the cirriculum presented challenges in understanding and in algorithm development. My notes on these topics are below.","title":"Notes on various problems"},{"location":"Notes/#minimal-mutation-trees-of-sequences","text":"SIAM J. Appl. Math., 28(1), 35\u201342. (8 pages) Publisher: Society for Industrial and Applied Mathematics Author: David Sankoff https://doi.org/10.1137/0128004 Abstract: Given a finite tree, some of whose vertices are identified with given finite sequences, we show how to construct sequences for all the remaining vertices simultaneously, so as to minimize the total edge-length of the tree. Edge-length is calculated by a metric whose biological significance is the mutational distance between two sequences.","title":"Minimal Mutation Trees of Sequences"},{"location":"Parsimony/","text":"Parsimony \u00b6 Notes on solving the Large Parsimony problem with nearest neighbor interchange. Here are two simple test examples. The first shows a tree with four leaf nodes and two internal nodes. The minimal parsimony solution consists of swapping two leaf nodes to reduce the overall hamming distance. Very simple test example - solution is to swap one C with one G, resulting in a tree with a minimum parsimony hamming distance of 1. Another test example - this time the solution is to swap two internal nodes, as shown below.","title":"Parsimony"},{"location":"Parsimony/#parsimony","text":"Notes on solving the Large Parsimony problem with nearest neighbor interchange. Here are two simple test examples. The first shows a tree with four leaf nodes and two internal nodes. The minimal parsimony solution consists of swapping two leaf nodes to reduce the overall hamming distance. Very simple test example - solution is to swap one C with one G, resulting in a tree with a minimum parsimony hamming distance of 1. Another test example - this time the solution is to swap two internal nodes, as shown below.","title":"Parsimony"},{"location":"Uploading/","text":"Uploading \u00b6 First use live updating to preview the results. Run the following in bash at the top of the repo: mkdocs serve This will compile the docs and keep them up to date with any live changes. It will also start a local web server. Aim a web browser at the server: http://127.0.0.1:8000/stepikBioinformaticsCourse/ The Script \u00b6 The mkdocs provides a handy build and deploy function. The trick is that the files are all contained in the \"gh-pages\" branch. But if you simply do the command in Idea or Android Studio, the tool will want to check all these normally \"invisible\" files into Git in the master branch. The working solution, after looking at OkHttp for example, seems to be to clone the repo into a temp folder and do all the building there. With bash in the docs directory, run the build_and_upload_docs.sh script. This clones the repo from github and compiles the docs. It then uploads the docs to the gh-deploy utility and initiates the build of the docs there. Once successfully finished the docs will be available at: https://jimandreas.github.io/stepikBioInformaticsCourse/","title":"Uploading"},{"location":"Uploading/#uploading","text":"First use live updating to preview the results. Run the following in bash at the top of the repo: mkdocs serve This will compile the docs and keep them up to date with any live changes. It will also start a local web server. Aim a web browser at the server: http://127.0.0.1:8000/stepikBioinformaticsCourse/","title":"Uploading"},{"location":"Uploading/#the-script","text":"The mkdocs provides a handy build and deploy function. The trick is that the files are all contained in the \"gh-pages\" branch. But if you simply do the command in Idea or Android Studio, the tool will want to check all these normally \"invisible\" files into Git in the master branch. The working solution, after looking at OkHttp for example, seems to be to clone the repo into a temp folder and do all the building there. With bash in the docs directory, run the build_and_upload_docs.sh script. This clones the repo from github and compiles the docs. It then uploads the docs to the gh-deploy utility and initiates the build of the docs there. Once successfully finished the docs will be available at: https://jimandreas.github.io/stepikBioInformaticsCourse/","title":"The Script"}]}